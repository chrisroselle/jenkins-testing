@Library('cr-common') _

pipeline {
    agent any
    
    stages {
        stage('CR') {
            steps {
                script {
                    def jobs = [:]
                    def job_results = [:]
                    for (v in p.example2.choices) {
                        def x = v
                        jobs[x] = {
                            job_results[x] = [:]
                            job_results[x]['child1'] = build job: 'child1', parameters: [
                                string(name: 'example2', value: x)
                            ]
                            job_results[x]['child2'] = build job: 'child2', parameters: [
                                string(name: 'example2', value: x)
                            ]
                        }
                    }
                    parallel jobs
                    job_results.each { k1, m1 ->
                        m1.each { k2, v2 ->
                            def log = cr_common.getLog(v2, 100)
                            def hit = false
                            def interesting = []
                            //echo "${k2}(${k1}) full log:"
                            for (line in log) {
                                //echo line
                                if (line.contains('interesting')) {
                                    hit = true
                                    interesting.add(line)
                                }
                            }
                            echo "${k2}(${k1}) summary:"
                            if (!hit) {
                                echo "--- no interesting log lines found ---"
                            } else {
                                for (line in interesting) {
                                    echo line
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    options {
        buildDiscarder(
            logRotator(
                //numToKeepStr: '30',
                daysToKeepStr: '30'
            )
        )
    }
}